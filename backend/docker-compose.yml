version: '3.8'

services:
  app:
    build:
      context: ./openai_connect
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
  
  meeting:
    build:
      context: ./meeting
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  zapi:
    build:
      context: ./z-api
      dockerfile: Dockerfile
    environment:
      - ZAPI_USER_INSTANCE=${ZAPI_USER_INSTANCE}
      - ZAPI_USER_TOKEN=${ZAPI_USER_TOKEN}
      - ZAPI_ACCOUNT_TOKEN=${ZAPI_ACCOUNT_TOKEN}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

volumes:
  redis_data: